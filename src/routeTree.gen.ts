/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as MarketingRouteImport } from './routes/_marketing'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as MarketingIndexRouteImport } from './routes/_marketing/index'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as AuthVerifyEmailRouteImport } from './routes/auth/verify-email'
import { Route as AuthAuthRouteImport } from './routes/auth/_auth'
import { Route as MarketingTermsRouteImport } from './routes/_marketing/terms'
import { Route as MarketingPrivacyRouteImport } from './routes/_marketing/privacy'
import { Route as MarketingPricingRouteImport } from './routes/_marketing/pricing'
import { Route as MarketingHelpRouteImport } from './routes/_marketing/help'
import { Route as MarketingContactRouteImport } from './routes/_marketing/contact'
import { Route as MarketingAboutRouteImport } from './routes/_marketing/about'
import { Route as AuthAuthRegisterRouteImport } from './routes/auth/_auth/register'
import { Route as AuthAuthLoginRouteImport } from './routes/auth/_auth/login'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketingRoute = MarketingRouteImport.update({
  id: '/_marketing',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const MarketingIndexRoute = MarketingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketingRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthVerifyEmailRoute = AuthVerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAuthRoute = AuthAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => AuthRoute,
} as any)
const MarketingTermsRoute = MarketingTermsRouteImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingPrivacyRoute = MarketingPrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingPricingRoute = MarketingPricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingHelpRoute = MarketingHelpRouteImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingContactRoute = MarketingContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => MarketingRoute,
} as any)
const MarketingAboutRoute = MarketingAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MarketingRoute,
} as any)
const AuthAuthRegisterRoute = AuthAuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthAuthRoute,
} as any)
const AuthAuthLoginRoute = AuthAuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthAuthRoute,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthAuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/about': typeof MarketingAboutRoute
  '/contact': typeof MarketingContactRoute
  '/help': typeof MarketingHelpRoute
  '/pricing': typeof MarketingPricingRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/': typeof MarketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthAuthRouteWithChildren
  '/about': typeof MarketingAboutRoute
  '/contact': typeof MarketingContactRoute
  '/help': typeof MarketingHelpRoute
  '/pricing': typeof MarketingPricingRoute
  '/privacy': typeof MarketingPrivacyRoute
  '/terms': typeof MarketingTermsRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/': typeof MarketingIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_marketing': typeof MarketingRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/_marketing/about': typeof MarketingAboutRoute
  '/_marketing/contact': typeof MarketingContactRoute
  '/_marketing/help': typeof MarketingHelpRoute
  '/_marketing/pricing': typeof MarketingPricingRoute
  '/_marketing/privacy': typeof MarketingPrivacyRoute
  '/_marketing/terms': typeof MarketingTermsRoute
  '/auth/_auth': typeof AuthAuthRouteWithChildren
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/_marketing/': typeof MarketingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/_auth/login': typeof AuthAuthLoginRoute
  '/auth/_auth/register': typeof AuthAuthRegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/dashboard'
    | '/about'
    | '/contact'
    | '/help'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/auth/verify-email'
    | '/dashboard/settings'
    | '/'
    | '/dashboard/'
    | '/auth/login'
    | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/about'
    | '/contact'
    | '/help'
    | '/pricing'
    | '/privacy'
    | '/terms'
    | '/auth/verify-email'
    | '/dashboard/settings'
    | '/'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
  id:
    | '__root__'
    | '/_marketing'
    | '/auth'
    | '/dashboard'
    | '/_marketing/about'
    | '/_marketing/contact'
    | '/_marketing/help'
    | '/_marketing/pricing'
    | '/_marketing/privacy'
    | '/_marketing/terms'
    | '/auth/_auth'
    | '/auth/verify-email'
    | '/dashboard/settings'
    | '/_marketing/'
    | '/dashboard/'
    | '/auth/_auth/login'
    | '/auth/_auth/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MarketingRoute: typeof MarketingRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_marketing': {
      id: '/_marketing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MarketingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_marketing/': {
      id: '/_marketing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MarketingIndexRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/_auth': {
      id: '/auth/_auth'
      path: ''
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_marketing/terms': {
      id: '/_marketing/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof MarketingTermsRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/privacy': {
      id: '/_marketing/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof MarketingPrivacyRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/pricing': {
      id: '/_marketing/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof MarketingPricingRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/help': {
      id: '/_marketing/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof MarketingHelpRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/contact': {
      id: '/_marketing/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof MarketingContactRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/_marketing/about': {
      id: '/_marketing/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MarketingAboutRouteImport
      parentRoute: typeof MarketingRoute
    }
    '/auth/_auth/register': {
      id: '/auth/_auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterRouteImport
      parentRoute: typeof AuthAuthRoute
    }
    '/auth/_auth/login': {
      id: '/auth/_auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginRouteImport
      parentRoute: typeof AuthAuthRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface MarketingRouteChildren {
  MarketingAboutRoute: typeof MarketingAboutRoute
  MarketingContactRoute: typeof MarketingContactRoute
  MarketingHelpRoute: typeof MarketingHelpRoute
  MarketingPricingRoute: typeof MarketingPricingRoute
  MarketingPrivacyRoute: typeof MarketingPrivacyRoute
  MarketingTermsRoute: typeof MarketingTermsRoute
  MarketingIndexRoute: typeof MarketingIndexRoute
}

const MarketingRouteChildren: MarketingRouteChildren = {
  MarketingAboutRoute: MarketingAboutRoute,
  MarketingContactRoute: MarketingContactRoute,
  MarketingHelpRoute: MarketingHelpRoute,
  MarketingPricingRoute: MarketingPricingRoute,
  MarketingPrivacyRoute: MarketingPrivacyRoute,
  MarketingTermsRoute: MarketingTermsRoute,
  MarketingIndexRoute: MarketingIndexRoute,
}

const MarketingRouteWithChildren = MarketingRoute._addFileChildren(
  MarketingRouteChildren,
)

interface AuthAuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const AuthAuthRouteChildren: AuthAuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

const AuthAuthRouteWithChildren = AuthAuthRoute._addFileChildren(
  AuthAuthRouteChildren,
)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRouteWithChildren
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRouteWithChildren,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  MarketingRoute: MarketingRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
